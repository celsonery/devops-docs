import{_ as a,c as s,o as e,a as n}from"./app-CT-lU83C.js";const i={},t=n(`<h1 id="split-database-instances" tabindex="-1"><a class="header-anchor" href="#split-database-instances"><span>Split Database Instances</span></a></h1><h2 id="objetivo" tabindex="-1"><a class="header-anchor" href="#objetivo"><span>Objetivo</span></a></h2><p>Executar múltiplas instâncias PostgreSQL no mesmo servidor, atribuindo limites de CPU e memória para cada uma usando <code>systemd</code> + <code>cgroups</code>.</p><hr><h2 id="_1-criar-diretorios-para-as-instancias" tabindex="-1"><a class="header-anchor" href="#_1-criar-diretorios-para-as-instancias"><span>1. Criar diretórios para as instâncias</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /var/lib/postgresql/15-banco_b</span>
<span class="line"><span class="token function">sudo</span> <span class="token function">chown</span> postgres:postgres /var/lib/postgresql/15-banco_*</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_2-inicializar-os-clusters" tabindex="-1"><a class="header-anchor" href="#_2-inicializar-os-clusters"><span>2. Inicializar os clusters</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> <span class="token parameter variable">-u</span> postgres /usr/lib/postgresql/15/bin/initdb <span class="token parameter variable">-D</span> /var/lib/postgresql/15-banco_b</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h2 id="_3-configurar-portas-e-parametros" tabindex="-1"><a class="header-anchor" href="#_3-configurar-portas-e-parametros"><span>3. Configurar portas e parâmetros</span></a></h2><p>Edite <code>postgresql.conf</code> de cada instância:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">nano</span> /var/lib/postgresql/15-banco_b/postgresql.conf</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Ajuste para:</p><div class="language-conf line-numbers-mode" data-highlighter="prismjs" data-ext="conf" data-title="conf"><pre><code><span class="line">port = 5433</span>
<span class="line">logging_collector = on</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_4-criar-servicos-systemd-para-cada-instancia" tabindex="-1"><a class="header-anchor" href="#_4-criar-servicos-systemd-para-cada-instancia"><span>4. Criar serviços <code>systemd</code> para cada instância</span></a></h2><h3 id="banco-b" tabindex="-1"><a class="header-anchor" href="#banco-b"><span>Banco B</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> <span class="token function">nano</span> /etc/systemd/system/postgresql-banco_b.service</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Conteúdo:</p><div class="language-ini line-numbers-mode" data-highlighter="prismjs" data-ext="ini" data-title="ini"><pre><code><span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">Unit</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">Description</span><span class="token punctuation">=</span><span class="token value attr-value">PostgreSQL Banco A</span></span>
<span class="line"><span class="token key attr-name">After</span><span class="token punctuation">=</span><span class="token value attr-value">network.target</span></span>
<span class="line"></span>
<span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">Service</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">User</span><span class="token punctuation">=</span><span class="token value attr-value">postgres</span></span>
<span class="line"><span class="token key attr-name">Group</span><span class="token punctuation">=</span><span class="token value attr-value">postgres</span></span>
<span class="line"><span class="token key attr-name">ExecStart</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/lib/postgresql/15/bin/postgres -D /var/lib/postgresql/15-banco_a</span></span>
<span class="line"><span class="token key attr-name">ExecReload</span><span class="token punctuation">=</span><span class="token value attr-value">/bin/kill -HUP $MAINPID</span></span>
<span class="line"><span class="token key attr-name">KillMode</span><span class="token punctuation">=</span><span class="token value attr-value">mixed</span></span>
<span class="line"><span class="token key attr-name">TimeoutSec</span><span class="token punctuation">=</span><span class="token value attr-value">0</span></span>
<span class="line"><span class="token key attr-name">Restart</span><span class="token punctuation">=</span><span class="token value attr-value">on-failure</span></span>
<span class="line"><span class="token key attr-name">Slice</span><span class="token punctuation">=</span><span class="token value attr-value">postgresql-banco-a.slice</span></span>
<span class="line"></span>
<span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">Install</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">WantedBy</span><span class="token punctuation">=</span><span class="token value attr-value">multi-user.target</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_5-criar-slices-systemd-para-limitar-cpu-e-memoria" tabindex="-1"><a class="header-anchor" href="#_5-criar-slices-systemd-para-limitar-cpu-e-memoria"><span>5. Criar slices <code>systemd</code> para limitar CPU e memória</span></a></h2><h3 id="banco-b-1" tabindex="-1"><a class="header-anchor" href="#banco-b-1"><span>Banco B</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> <span class="token function">nano</span> /etc/systemd/system/postgresql-banco-b.slice</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Conteúdo:</p><div class="language-ini line-numbers-mode" data-highlighter="prismjs" data-ext="ini" data-title="ini"><pre><code><span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">Slice</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">CPUQuota</span><span class="token punctuation">=</span><span class="token value attr-value">25%</span></span>
<span class="line"><span class="token key attr-name">MemoryMax</span><span class="token punctuation">=</span><span class="token value attr-value">512M</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>CPUQuota=25%</code> significa que o processo pode usar até 25% de um núcleo de CPU disponível (ou equivalente compartilhado).</p></blockquote><hr><h2 id="_6-ativar-e-iniciar-as-instancias" tabindex="-1"><a class="header-anchor" href="#_6-ativar-e-iniciar-as-instancias"><span>6. Ativar e iniciar as instâncias</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> systemctl daemon-reexec</span>
<span class="line"><span class="token function">sudo</span> systemctl daemon-reload</span>
<span class="line"></span>
<span class="line"><span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> <span class="token parameter variable">--now</span> postgresql-banco_b.service</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_7-verificar-limites-ativos" tabindex="-1"><a class="header-anchor" href="#_7-verificar-limites-ativos"><span>7. Verificar limites ativos</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">systemd-cgtop</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>ou</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">systemctl status postgresql-banco_b</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h1 id="migrar-banco-entre-instancias" tabindex="-1"><a class="header-anchor" href="#migrar-banco-entre-instancias"><span>Migrar Banco entre Instancias</span></a></h1><h2 id="opcao-1-usar-pg-dump-pg-restore-recomendado-para-ambientes-controlaveis" tabindex="-1"><a class="header-anchor" href="#opcao-1-usar-pg-dump-pg-restore-recomendado-para-ambientes-controlaveis"><span>Opção 1: Usar pg_dump + pg_restore (recomendado para ambientes controláveis)</span></a></h2><ul><li>Faça o dump do banco atual (rodando na instância original):</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">pg_dump <span class="token parameter variable">-U</span> postgres <span class="token parameter variable">-h</span> localhost <span class="token parameter variable">-p</span> <span class="token number">5432</span> <span class="token parameter variable">-Fc</span> <span class="token parameter variable">-d</span> nome_do_banco <span class="token operator">&gt;</span> banco.dump</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><p>Inicie a nova instância separada (portas diferentes, como 5433).</p></li><li><p>Crie o banco de destino na nova instância:</p></li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">createdb <span class="token parameter variable">-U</span> postgres <span class="token parameter variable">-h</span> localhost <span class="token parameter variable">-p</span> <span class="token number">5433</span> nome_do_banco</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>Restaure o dump:</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">pg_restore <span class="token parameter variable">-U</span> postgres <span class="token parameter variable">-h</span> localhost <span class="token parameter variable">-p</span> <span class="token number">5433</span> <span class="token parameter variable">-d</span> nome_do_banco banco.dump</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><p>Teste tudo antes de liberar em produção. Teste os dados, permissões, usuários, índices, funções, etc.</p></li><li><p>Ajuste clientes/aplicações para apontar para a nova porta (ex: 5433).</p></li></ul>`,45),l=[t];function r(c,p){return e(),s("div",null,l)}const d=a(i,[["render",r],["__file","separar-instancias.html.vue"]]),u=JSON.parse('{"path":"/postgres/separar-instancias.html","title":"Split Database Instances","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Objetivo","slug":"objetivo","link":"#objetivo","children":[]},{"level":2,"title":"1. Criar diretórios para as instâncias","slug":"_1-criar-diretorios-para-as-instancias","link":"#_1-criar-diretorios-para-as-instancias","children":[]},{"level":2,"title":"2. Inicializar os clusters","slug":"_2-inicializar-os-clusters","link":"#_2-inicializar-os-clusters","children":[]},{"level":2,"title":"3. Configurar portas e parâmetros","slug":"_3-configurar-portas-e-parametros","link":"#_3-configurar-portas-e-parametros","children":[]},{"level":2,"title":"4. Criar serviços systemd para cada instância","slug":"_4-criar-servicos-systemd-para-cada-instancia","link":"#_4-criar-servicos-systemd-para-cada-instancia","children":[{"level":3,"title":"Banco B","slug":"banco-b","link":"#banco-b","children":[]}]},{"level":2,"title":"5. Criar slices systemd para limitar CPU e memória","slug":"_5-criar-slices-systemd-para-limitar-cpu-e-memoria","link":"#_5-criar-slices-systemd-para-limitar-cpu-e-memoria","children":[{"level":3,"title":"Banco B","slug":"banco-b-1","link":"#banco-b-1","children":[]}]},{"level":2,"title":"6. Ativar e iniciar as instâncias","slug":"_6-ativar-e-iniciar-as-instancias","link":"#_6-ativar-e-iniciar-as-instancias","children":[]},{"level":2,"title":"7. Verificar limites ativos","slug":"_7-verificar-limites-ativos","link":"#_7-verificar-limites-ativos","children":[]},{"level":2,"title":"Opção 1: Usar pg_dump + pg_restore (recomendado para ambientes controláveis)","slug":"opcao-1-usar-pg-dump-pg-restore-recomendado-para-ambientes-controlaveis","link":"#opcao-1-usar-pg-dump-pg-restore-recomendado-para-ambientes-controlaveis","children":[]}],"git":{"updatedTime":1756395341000,"contributors":[{"name":"Celso Nery","email":"celso.nery@gmail.com","commits":1}]},"filePathRelative":"postgres/separar-instancias.md"}');export{d as comp,u as data};
