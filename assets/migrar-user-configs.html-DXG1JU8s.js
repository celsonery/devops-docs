import{_ as e,c as s,o as a,a as n}from"./app-CT-lU83C.js";const t={},r=n(`<h1 id="migrate-configs-in-the-postgresql" tabindex="-1"><a class="header-anchor" href="#migrate-configs-in-the-postgresql"><span>Migrate Configs in the PostgreSQL</span></a></h1><h2 id="goal" tabindex="-1"><a class="header-anchor" href="#goal"><span>Goal</span></a></h2><p>Migrate the same <strong>users, passwords and permissions</strong> of postgresql previews instance to new instance.</p><hr><h2 id="method-1-—-use-pg-dumpall-to-export-only-globals-objects" tabindex="-1"><a class="header-anchor" href="#method-1-—-use-pg-dumpall-to-export-only-globals-objects"><span>Method 1 — Use <code>pg_dumpall</code> to export only globals objects</span></a></h2><h3 id="_1-generate-global-dump-of-preview-instance" tabindex="-1"><a class="header-anchor" href="#_1-generate-global-dump-of-preview-instance"><span>1. Generate global dump of preview instance</span></a></h3><p>In the original server, performe:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">pg_dumpall <span class="token parameter variable">-U</span> postgres --globals-only <span class="token operator">&gt;</span> globals.sql</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This comand export:</p><ul><li>Users (roles)</li><li>Passwords</li><li>Permissions</li><li>Tablespaces</li><li>Configs (<code>ALTER ROLE</code>, <code>ALTER DATABASE</code>)</li></ul><hr><h3 id="_2-import-into-new-the-server-instance" tabindex="-1"><a class="header-anchor" href="#_2-import-into-new-the-server-instance"><span>2. Import into new the server/instance</span></a></h3><p>In the new server, run (Adjust to your environment):</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">psql <span class="token parameter variable">-U</span> postgres <span class="token parameter variable">-h</span> localhost <span class="token parameter variable">-p</span> <span class="token number">5433</span> <span class="token parameter variable">-f</span> globals.sql</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h3 id="be-careful" tabindex="-1"><a class="header-anchor" href="#be-careful"><span>Be careful</span></a></h3><ul><li>If user <code>postgres</code> already exists int the new instance, remove the corresponding line in the <code>globals.sql</code> before import.</li><li>The <code>pg_dumpall</code> include passwords already cyphers, preserving them as long as the same authentication method (<code>md5</code> or <code>scram-sha-256</code>) is configured.</li></ul><hr><h2 id="method-2-—-copy-the-whole-cluster-with-rsync" tabindex="-1"><a class="header-anchor" href="#method-2-—-copy-the-whole-cluster-with-rsync"><span>Method 2 — Copy the whole cluster with <code>rsync</code></span></a></h2><p>If <strong>the PostgreSQL versions was the same</strong> and there is the possibility of downtime, you can copy the whole cluster, preserving user, databases and configs.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> systemctl stop postgresql</span>
<span class="line"><span class="token function">sudo</span> <span class="token function">rsync</span> <span class="token parameter variable">-av</span> /var/lib/postgresql/15/main/ /var/lib/postgresql/15-db_a/</span>
<span class="line"><span class="token function">sudo</span> <span class="token function">chown</span> <span class="token parameter variable">-R</span> postgres:postgres /var/lib/postgresql/15-dba_a</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>After the copy, adjust the <code>postgresql.conf</code> file and restart the new instance.</p><hr><h2 id="verifing-after-migration" tabindex="-1"><a class="header-anchor" href="#verifing-after-migration"><span>Verifing After Migration</span></a></h2><p>In the new instance, connect as superuser and list users:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line">\\du</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Test the login with preview user:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">psql <span class="token parameter variable">-U</span> usuario_test <span class="token parameter variable">-h</span> localhost <span class="token parameter variable">-p</span> <span class="token number">5433</span> <span class="token parameter variable">-d</span> name_of_database</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><p><strong>Tip:</strong> Always make backup before any migration and test in the homolog environment before apply to production.</p>`,30),l=[r];function i(o,p){return a(),s("div",null,l)}const d=e(t,[["render",i],["__file","migrar-user-configs.html.vue"]]),h=JSON.parse('{"path":"/postgres/migrar-user-configs.html","title":"Migrate Configs in the PostgreSQL","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Goal","slug":"goal","link":"#goal","children":[]},{"level":2,"title":"Method 1 — Use pg_dumpall  to export only globals objects","slug":"method-1-—-use-pg-dumpall-to-export-only-globals-objects","link":"#method-1-—-use-pg-dumpall-to-export-only-globals-objects","children":[{"level":3,"title":"1. Generate global dump of preview instance","slug":"_1-generate-global-dump-of-preview-instance","link":"#_1-generate-global-dump-of-preview-instance","children":[]},{"level":3,"title":"2. Import into new the server/instance","slug":"_2-import-into-new-the-server-instance","link":"#_2-import-into-new-the-server-instance","children":[]},{"level":3,"title":"Be careful","slug":"be-careful","link":"#be-careful","children":[]}]},{"level":2,"title":"Method 2 — Copy the whole cluster with rsync","slug":"method-2-—-copy-the-whole-cluster-with-rsync","link":"#method-2-—-copy-the-whole-cluster-with-rsync","children":[]},{"level":2,"title":"Verifing After Migration","slug":"verifing-after-migration","link":"#verifing-after-migration","children":[]}],"git":{"updatedTime":1756395341000,"contributors":[{"name":"Celso Nery","email":"celso.nery@gmail.com","commits":1}]},"filePathRelative":"postgres/migrar-user-configs.md"}');export{d as comp,h as data};
